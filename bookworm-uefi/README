Build bookworm-uefi sdcard image for rockpi4b:

There is no edk2-rk3399, so we use fedora-38 as edk2-rk3399 to install debian-12.8.0-arm64-netinst.iso to rockpi4b.

cd ~/Downloads
wget https://archives.fedoraproject.org/pub/archive/fedora/linux/releases/38/Workstation/aarch64/images/Fedora-Workstation-38-1.6.aarch64.raw.xz
wget https://cloud.debian.org/images/archive/12.8.0/arm64/iso-cd/debian-12.8.0-arm64-netinst.iso
wget http://http.us.debian.org/debian/dists/bookworm/main/installer-arm64/20230607+deb12u9/images/netboot/debian-installer/arm64/linux
wget http://http.us.debian.org/debian/dists/bookworm/main/installer-arm64/20230607+deb12u9/images/netboot/debian-installer/arm64/initrd.gz

cd ~/build-rockpi4b/bookworm-uefi
Plugin NVMe-SSD to PC. 
sudo ./mksdcardimg.sh
sudo mkfs.vfat /dev/sda1
sudo mkfs.ext4 /dev/sda2
sudo fdisk -l /dev/sda
xzcat ~/Downloads/Fedora-Workstation-38-1.6.aarch64.raw.xz | sudo dd status=progress bs=4096 of=/dev/sda skip=256 seek=4096 count=415744 conv=notrunc,fsync
sudo mount /dev/sda2 /mnt
cd /mnt
sudo \rm -rf efi dtb-6.2.9-300.fc38.aarch64 init* lost+found symvers* System* vmlinuz* .vmlinuz* config* dtb
sudo 7z x ~/Downloads/debian-12.8.0-arm64-netinst.iso
sudo cp ~/Downloads/linux .
sudo cp ~/Downloads/initrd.gz .
sudo chmod 755 loader/entries
sudo chmod 755 loader/entries/*
sudo vi loader/entries/* ( change to
linux /linux
initrd /initrd.gz
delete options
)
cd
sync
sudo umount /mnt
Eject NVMe-SSD from PC.

Plugin NVMe-SSD to rockpi4b. Plugin ethernet cable to rockpi4b. Power on rockpi4b.

Set User name: linaro
Partition ( Enter, Enter, Enter, Yes )
Select debian desktop and gnome in addition to ssh and standard system utilities.
Force GRUB to install to the EFI ( Yes )
Update NVMRAM to boot Debian ( Yes )
Stuck at Unable to install GRUB in dummy.
Continue without bootloader. Power off rockpi4b when installation completed.

Plugin NVMe-SSD to PC.
sudo parted /dev/sda ( print, rm 2, print, quit )
sudo blkid /dev/sda3 ( write down UUID for usage in /mnt/boot/grub/grub.cfg )
sudo e2label /dev/sda3 rootfs
sudo mount /dev/sda3 /mnt
cd /mnt
sudo vi boot/grub/grub.cfg ( add
set timeout=5
set default="Boot UUID"
set menu_color_normal=white/black
set menu_color_highlight=white/green
set root=(nvme0n1,gpt3)

menuentry "Boot UUID" {
    search --no-floppy --fs-uuid --set=root --hint='usb0,gpt3' --hint='mmcblk1,gpt3' --hint='nvme0n1,gpt3' 93f710f4-81f6-440f-9348-2f6aefe9b0d2
    echo    'Loading Linux 6.1.0-31-arm64 ...'
    linux /boot/vmlinuz-6.1.0-31-arm64 root=LABEL=rootfs rootwait rw
    echo    'Loading initial ramdisk ...'
    initrd /boot/initrd.img-6.1.0-31-arm64
}
)
cd
sync
sudo umount /mnt
sudo mount /dev/sda1 /mnt
cd /mnt/EFI
sudo \rm -rf fedora
sudo vi debian/grub.cfg ( change first line to search --no-floppy --fs-uuid --set=root --hint='usb0,gpt3' --hint='mmcblk1,gpt3' --hint='nvme0n1,gpt3' UUID )
cd
sync
sudo umount /mnt
Eject NVMe-SSD from PC.

Plugin NVMe-SSD to rockpi4b. Plugin ethernet cable to rockpi4b. Power on rockpi4b.
Disable power saving and screen saver.
su -
usermod -aG sudo linaro
sudo reboot

df .
uname -a
lsb_release -a
sudo apt install net-tools openssh-server pulseaudio-utils
date
sudo vi /etc/apt/sources.list ( add contrib non-free-firmware )
sudo apt update
sudo apt upgrade
sync
sudo apt install firmware-linux vsftpd
sudo vi /etc/vsftpd.conf ( anonymous_enable=NO local_enable=YES write_enable=YES )
sudo systemctl restart vsftpd.service
ftp ~/build-rockpi4b/bookworm-uefi/packages/* /lib/firmware/brcm
cd /lib/firmware/brcm
sudo chmod 755 *
cd
sudo ifconfig

Check if Debian is running UEFI mode:
ls /sys/firmware/efi

----------------------------------------------------
Compile and install mainline kernel
----------------------------------------------------

sudo apt install flex bison libelf-dev libssl-dev build-essential libncurses-dev git speedtest-cli glmark2-es2-wayland mpv ffmpeg python3-pip python3-setuptools chromium chromium-sandbox pandoc pavucontrol zip rfkill vlc vlc-plugin-video-output

wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-6.14-rc3.tar.gz
tar -xzf linux-6.14-rc3.tar.gz
mv linux-6.14-rc3 linux
vi ./linux/arch/arm64/configs/defconfig ( enable NVMe change to:
CONFIG_PHY_ROCKCHIP_PCIE=y
CONFIG_BLK_DEV_NVME=y
CONFIG_PCIE_ROCKCHIP_HOST=y
CONFIG_SATA_AHCI=y
CONFIG_EXT4_FS=y
CONFIG_PCIEPORTBUS=y
CONFIG_SQUASHFS_XZ=y
)

cd linux
sudo make mrproper
make ARCH=arm64 defconfig
make ARCH=arm64 all -j$(nproc)      ( it may take 4 hours to compile kernel in terminal )
sudo make ARCH=arm64 modules_install
sudo make ARCH=arm64 dtbs_install
sudo make ARCH=arm64 install

ls -la /boot
sudo vi /boot/grub/grub.cfg ( after each initrd.img-6.14.0-rc3 add
devicetree /boot/dtbs/6.14.0-rc3/rockchip/rk3399-rock-pi-4b.dtb
)

sync
sudo shutdown -h now
Disconnect ethernet cable from rockpi4b. Power on rockpi4b.

sudo ifconfig
Setup wifi.
uname -a
lsb_release -a
Check if Debian is running UEFI mode:
ls /sys/firmware/efi

glmark2-es2-wayland
speedtest-cli

aplay -l
pavucontrol  ( select hdmi as default )

firefox -> youtube -> search YmDNhi07_Ho

git clone https://github.com/yt-dlp/yt-dlp.git
cd yt-dlp
make
cd ../
~/yt-dlp/yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' hyUhEjtlDLA -o avemaria.mp4
mpv avemaria.mp4
cvlc --gl=wgl --glconv=any avemaria.mp4

sudo rfkill list
hciconfig hci0
hcitool dev
hciconfig -a
