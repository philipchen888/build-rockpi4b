Build ubuntu-uefi sdcard image for rockpi4b:

-----------------------------------------------------------
Download Ubuntu iso.
-----------------------------------------------------------

cd ~/Downloads
wget https://cdimage.ubuntu.com/noble/daily-live/current/noble-desktop-arm64.iso

cd ~/build-rockpi4b/ubuntu-uefi
Plugin NVMe-SSD to PC.
sudo ./mksatassd.sh
sudo mkfs.ext4 /dev/sda1
sudo fdisk -l /dev/sda
Eject NVMe-SSD from PC.

Plugin sdcard to PC.
sudo ./mksdcard.sh
sudo mkfs.vfat /dev/sda1
sudo fdisk -l /dev/sda
sudo mount -t vfat /dev/sda1 /mnt
cd /mnt
sudo 7z x ~/Downloads/noble-desktop-arm64.iso
cd
sync
sudo umount /mnt
Eject sdcard from PC.

----------------------------------------------------------------------------
Install Ubuntu to NVMe-SSD using noble-desktop-arm64.iso in sdcard.
----------------------------------------------------------------------------

Plugin sdcard and NVMe-SSD to rockpi4b. Plugin ethernet cable to rockpi4b. Power on rockpi4b.

Double click Install Ubuntu LTS icon.
Erase disk and install Ubuntu.
Click Install now.
Contine till finished. Restart.

Unplug sdcard from rockpi4b.
Plugin NVMe-SSD to rockpi4b. Plugin ethernet cable to rockpi4b. Power on rockpi4b.
Disable power saving and screen saver.

df .
uname -a
lsb_release -a
date
sudo apt update
sudo apt upgrade    ( don't restart computer untill after mainline kernel installed )
sync
sudo apt install net-tools openssh-server pulseaudio-utils
sudo ifconfig

Check if Ubuntu is running UEFI mode:
ls /sys/firmware/efi

---------------------------------------------------------------------
Compile and install mainline kernel and install wifi bluetooth driver.
---------------------------------------------------------------------

sudo apt update
sudo apt install flex bison libelf-dev libssl-dev build-essential libncurses-dev git speedtest-cli glmark2-es2-wayland mpv ffmpeg python3-pip python3-setuptools pandoc pavucontrol zip rfkill vsftpd vlc vlc-plugin-video-output

Install wifi bluetooth driver:
sudo vi /etc/vsftpd.conf  ( anonymous_enable=NO local_enable=YES write_enable=YES )
sudo systemctl restart vsftpd
Ftp ~/build-rockpi4b/linux/linux/tmp/boot/dtb/rockchip/rk3399-rock-pi-4b.dtb to /etc/flash-kernel/dtbs
Ftp ~/build-rockpi4b/linux/linux/tmp/boot/dtb/rockchip/rk3399-rock-pi-4b.dtb to /etc/flash-kernel/dtbs/rk3399-rock-pi-4a.dtb
Ftp ~/build-rockpi4b/ubuntu-uefi/packages/* to /lib/firmware/brcm

wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-6.14-rc3.tar.gz
tar -xzf linux-6.14-rc3.tar.gz
mv linux-6.14-rc3 linux
vi ./linux/arch/arm64/configs/defconfig ( enable NVMe change to:
CONFIG_PHY_ROCKCHIP_PCIE=y
CONFIG_BLK_DEV_NVME=y
CONFIG_PCIE_ROCKCHIP_HOST=y
CONFIG_SATA_AHCI=y
CONFIG_EXT4_FS=y
CONFIG_PCIEPORTBUS=y
CONFIG_SQUASHFS_XZ=y
)

cd linux
sudo make mrproper
make ARCH=arm64 defconfig
make ARCH=arm64 all -j$(nproc)            ( it may take 4 hours to compile kernel )
sudo make ARCH=arm64 modules_install
sudo make ARCH=arm64 dtbs_install
sudo make ARCH=arm64 install

sudo blkid /dev/nvme0n1p2 ( write down UUID for next step )
sudo e2label /dev/nvme0n1p2 rootfs
sudo blkid /dev/nvme0n1p2
sudo vi /etc/grub.d/40_custom_uuid ( add
#!/bin/sh
exec tail -n +3 $0

menuentry "Boot from UUID" {
    search --no-floppy --fs-uuid --set=root --hint='usb0,gpt2' --hint='mmcblk1,gpt2' --hint='nvme0n1,gpt2' 42942f96-a38d-4b49-a75e-4defa93a8160
    echo    'Loading Linux 6.14.0-rc3 ...'
    linux /boot/vmlinuz-6.14.0-rc3 root=LABEL=rootfs rootwait rw
    echo    'Loading initial ramdisk ...'
    initrd /boot/initrd.img-6.14.0-rc3
    echo    'Loading rk3399-rock-pi-4b.dtb'
    devicetree /boot/dtbs/6.14.0-rc3/rockchip/rk3399-rock-pi-4b.dtb
}
)
Note: change the above UUID to real UUID like: b3adbe54-ab88-4da5-a9a6-08cf87a09d69
Find real UUID: sudo blkid /dev/nvme0n1p2

sudo chmod +x /etc/grub.d/40_custom_uuid
sudo vi /etc/default/grub ( change GRUB_DEFAULT=0 to GRUB_DEFAULT="Boot from UUID" )
sudo update-grub  ( generate grub.cfg )
sudo vi /etc/fstab ( make sure UUID are correct. delete swap )
cd
sync
sudo shutdown -h now

Power off rockpi4b. Power on rockpi4b.
Setup wifi. Disconnect ethernet cable from rockpi4b.
uname -a
lsb_release -a
Check if Ubuntu is running UEFI mode:
ls /sys/firmware/efi

speedtest-cli
glmark2-es2-wayland

aplay -l
pavucontrol  ( select hdmi as default )

sudo add-apt-repository ppa:mozillateam/ppa
sudo apt update
sudo apt upgrade
sudo apt install firefox-esr
firefox -> youtube -> search YmDNhi07_Ho

git clone https://github.com/yt-dlp/yt-dlp.git
cd yt-dlp
make
cd ../
~/yt-dlp/yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' hyUhEjtlDLA -o avemaria.mp4
mpv avemaria.mp4
cvlc --gl=wgl --glconv=any avemaria.mp4

sudo rfkill list
hciconfig hci0
hcitool dev
hciconfig -a
